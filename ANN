import os
import json
import math


def cosine_similarity(a, b):
    """
    Calculates the cosine similarity between two dictionaries a and b.

    Args:
        a (dict): The first dictionary.
        b (dict): The second dictionary.

    Returns:
        float: The cosine similarity between the two dictionaries.
    """
    dot_product = 0
    norm_a = 0
    norm_b = 0
    
    for key in set(a.keys()) & set(b.keys()):
        dot_product += a[key] * b[key]
        norm_a += a[key] ** 2
        norm_b += b[key] ** 2
        
    if norm_a == 0 or norm_b == 0:
        return 0
    else:
        return dot_product / math.sqrt(norm_a * norm_b)


def nearest_neighbor(q, data):
    """
    Finds the nearest neighbor of a query dictionary q in a list of dictionaries data.

    Args:
        q (dict): The query dictionary.
        data (list): The list of dictionaries to search.

    Returns:
        dict: The dictionary in data that is closest to q in terms of cosine similarity.
    """
    best_match = None
    best_similarity = 0
    
    for d in data:
        sim = cosine_similarity(q, d)
        
        if sim > best_similarity:
            best_match = d
            best_similarity = sim
            
    return best_match


# Example usage
directory = 'Profiles/'
data = []
query = {
        "steak": 88.88888888888889,
        "calamari": 75.0,
        "dumplings": 71.42857142857143,
        "waffles": 69.23076923076923,
        "barbecue ribs": 60.0,
        "hamburger": 55.55555555555556,
        "noodles": 50.0,
        "grilled salmon": 50.0,
        "pulled pork": 42.857142857142854,
        "rice": 37.5,
        "spaghetti": 33.33333333333333,
        "soup": 33.33333333333333,
        "chicken": 25.0,
        "tandoori chicken": 25.0,
        "tacos": 16.666666666666664,
        "sushi": 0.0,
        "pizza": 0.0
    }


for user_files in os.listdir(directory):
    if user_files != f"{USER}.json":
        with open(os.path.join(directory, user_files), 'r') as f:
            user = json.load(f)
            data.append(user["cpi"])

result = nearest_neighbor(query, data)
print(data)
print(result)